name: Terraform Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./terraform

    env:
      TF_VAR_proxmox_user: ${{ secrets.PROXMOX_USER }}
      TF_VAR_proxmox_password: ${{ secrets.PROXMOX_PASSWORD }}
      TF_VAR_ssh_user: ${{ secrets.SSH_USER }}
      TF_VAR_ssh_password: ${{ secrets.SSH_PASSWORD }}
      TF_VAR_ssh_keys: ${{ secrets.SSH_KEYS }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          terraform fmt -recursive
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git pull origin main --rebase
          git add .
          git diff-index --quiet HEAD || (git commit -m "Automated: Fix terraform formatting" && git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:main)
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -out=tfplan
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: Copy Inventory File
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp inventory.ini ../ansible/
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git pull origin main --rebase
          git add ../ansible/inventory.ini
          git commit -m "Update Ansible inventory after Terraform apply"
          git push "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" HEAD:main   


