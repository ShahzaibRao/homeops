---
- name: Ensure kubectl is available
  become: yes
  shell: which kubectl
  register: kubectl_check
  changed_when: false
  failed_when: kubectl_check.rc != 0

- name: Ensure ArgoCD namespace exists
  become: yes
  shell: |
    if ! kubectl get ns argocd >/dev/null 2>&1; then
      kubectl create ns argocd
      echo "Namespace created"
    else
      echo "Namespace already exists"
    fi
  register: ns_create
  changed_when: "'created' in ns_create.stdout"

- name: Install or update ArgoCD components
  become: yes
  shell: |
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  register: argocd_install
  changed_when: "'configured' in argocd_install.stdout or 'created' in argocd_install.stdout"

- name: Wait for ArgoCD server to be available
  become: yes
  shell: |
    echo "‚è≥ Waiting for ArgoCD server to be ready..."
    kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
  register: argocd_ready
  changed_when: false

- name: Expose ArgoCD server via LoadBalancer (optional)
  become: yes
  shell: |
    kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}' || true
  changed_when: false
  ignore_errors: true

- name: Retrieve ArgoCD initial admin password
  become: yes
  shell: |
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d
  register: argocd_password
  changed_when: false

- name: Display ArgoCD admin password
  debug:
    msg:
      - "‚úÖ ArgoCD installed successfully!"
      - "üåê Access the ArgoCD UI using:"
      - "    kubectl -n argocd port-forward svc/argocd-server 8080:443"
      - "üîë Login credentials:"
      - "    Username: admin"
      - "    Password: {{ argocd_password.stdout }}"
