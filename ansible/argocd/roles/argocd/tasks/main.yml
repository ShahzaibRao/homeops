---
- name: Ensure kubectl is available
  become: yes
  shell: which kubectl
  register: kubectl_check
  changed_when: false
  failed_when: kubectl_check.rc != 0

- name: Create namespace for ArgoCD
  become: yes
  shell: |
    kubectl get ns argocd || kubectl create ns argocd
  register: ns_create
  changed_when: "'created' in ns_create.stdout"
  ignore_errors: false

- name: Install ArgoCD components
  become: yes
  shell: |
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

- name: Wait for ArgoCD server deployment to be available
  become: yes
  shell: |
    kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n argocd
  register: argocd_ready
  changed_when: false

- name: Expose ArgoCD server as LoadBalancer (optional)
  become: yes
  shell: |
    kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
  ignore_errors: true

- name: Retrieve initial ArgoCD admin password
  become: yes
  shell: |
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d
  register: argocd_password
  changed_when: false

- name: Display ArgoCD Admin Password
  debug:
    msg: "ðŸ”‘ ArgoCD Admin Password: {{ argocd_password.stdout }}"

# ----------------------------------------------------------------
# ðŸ§­ Configure the Truth Point (App of Apps)
# ----------------------------------------------------------------
- name: Create ArgoCD root-app manifest file
  become: yes
  copy:
    dest: /tmp/root-app.yaml
    content: |
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: root-app
        namespace: argocd
      spec:
        project: default
        source:
          repoURL: https://github.com/ShahzaibRao/homeops.git
          targetRevision: main
          path: apps
          directory:
            recurse: true
        destination:
          server: https://kubernetes.default.svc
          namespace: default
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
          syncOptions:
            - CreateNamespace=true
            - ApplyOutOfSyncOnly=true

- name: Apply ArgoCD root-app to cluster
  become: yes
  shell: |
    kubectl apply -f /tmp/root-app.yaml
  register: argocd_root_app
  changed_when: "'created' in argocd_root_app.stdout or 'configured' in argocd_root_app.stdout"
